#!/usr/bin/bash
SHELL=/usr/bin/bash
#
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
###
# Make a new folder for the results
test -d "$HOME/releasecompare" || mkdir -p "$HOME/releasecompare" && cd $HOME/releasecompare
###
# Custom URL to *pkgs.txt
_custom_URL() {
echo
echo -e "\e[1m Do you want to remove any existing results? \e[0m"
read -r -p "$1 ([y]es or [N]o): "
case $(echo "$REPLY" | tr '[:upper:]' '[:lower:]') in
    y|yes) echo -e "\e[1m yes \e[0m"
    rm -rf $HOME/releasecompare/*

    echo ""
    echo -e "Please go to\e[7m https://osdn.net/projects/manjaro/storage/(Edition)/(Release_Number)/*pkgs.txt\e[0m and copy the URL."
    echo ""
    echo -e "  1) Copy/Paste the URL to *pkgs.txt and press ENTER"
    echo -e "  2) Quit"
    read -r choice
    case "$choice" in
            1)
                echo -e "paste the URL to *pkgs.txt"
                read -p 'URL: ' uservar
                wget $uservar
                file="echo *pkgs.txt"

                # generate list of installed packages
                pacman -Q > pacman.txt

                # final comparision
                cat ${file} | cut -d' ' -f1 > comp1.txt
                cat pacman.txt | cut -d' ' -f1 > comp2.txt
                diff -u comp2.txt comp1.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee ${choice}-${release}-release.txt # Packages from Release which are not installed local
                diff -u comp1.txt comp2.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee userpkglist.txt # Packages installed by User

                # clean up
                rm -rf *pkgs.txt comp1.txt comp2.txt pacman.txt index.html path.txt release.txt

                ;;

            2|q|quit)
                # clean up
                rm -rf *pkgs.txt comp1.txt comp2.txt pacman.txt index.html path.txt release.txt
                exit
                ;;
            * ) echo "invalid option $REPLY"
                ;;
        esac

    _userreleasepkglist
    echo ""
    echo -e "\e[7m For Installation Options Run: \e[0m"
    echo -e "\e[1m ./releasecompare install \e[0m"
    echo ""
    echo ""
    echo -e "\e[7m The Comparision Results Were Saved To: \e[0m"
    echo -e "\e[1m $HOME/releasecompare \e[0m"
    echo ""
    _meld
    exit
    ;;
    * )     echo -e "\e[1m no \e[0m"
    echo ""
    echo -e "Please go to\e[7m https://osdn.net/projects/manjaro/storage/(Edition)/(Release_Number)/*pkgs.txt\e[0m and copy the URL."
    echo ""
    echo -e "  1) Copy/Paste the URL to *pkgs.txt and press ENTER"
    echo -e "  2) Quit"
    read -r choice
    case "$choice" in
            1)
                echo -e "paste the URL to *pkgs.txt"
                read -p 'URL: ' uservar
                wget $uservar
                file="echo *pkgs.txt"

                # generate list of installed packages
                pacman -Q > pacman.txt

                # final comparision
                cat ${file} | cut -d' ' -f1 > comp1.txt
                cat pacman.txt | cut -d' ' -f1 > comp2.txt
                diff -u comp2.txt comp1.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee ${choice}-${release}-release.txt # Packages from Release which are not installed local
                diff -u comp1.txt comp2.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee userpkglist.txt # Packages installed by User

                # clean up
                rm -rf *pkgs.txt comp1.txt comp2.txt pacman.txt index.html path.txt release.txt

                ;;

            2|q|quit)
                # clean up
                rm -rf *pkgs.txt comp1.txt comp2.txt pacman.txt index.html path.txt release.txt
                exit
                ;;
            * ) echo "invalid option $REPLY"
                ;;
        esac

    _userreleasepkglist
    echo ""
    echo -e "\e[7m For Installation Options Run: \e[0m"
    echo -e "\e[1m ./releasecompare install \e[0m"
    echo ""
    echo ""
    echo -e "\e[7m The Comparision Results Were Saved To: \e[0m"
    echo -e "\e[1m $HOME/releasecompare \e[0m"
    echo ""
    _meld
    rm -rf release-removed-uninstalled.txt
    exit ;;
esac

}
# Open results in Meld
_meld () {
    echo
    echo -e "\e[1m Do you want to view the results in Meld? \e[0m"
    read -r -p "$1 ([y]es or [N]o): "
    case $(echo "$REPLY" | tr '[:upper:]' '[:lower:]') in
        y|yes) echo -e "\e[1m yes \e[0m"
        meld release-removed-uninstalled.txt *release.txt
        ;;
        * )     echo -e "\e[1m no \e[0m" ;;
    esac
}
###
# Remove Existing Comparision Results
_remove_results () {
    echo
    echo -e "\e[1m Do you want to remove existing results? \e[0m"
    read -r -p "$1 ([y]es or [N]o): "
    case $(echo "$REPLY" | tr '[:upper:]' '[:lower:]') in
        y|yes) echo -e "\e[1m yes \e[0m"
        rm -rf $HOME/releasecompare/*
        _compare
        _userreleasepkglist
        echo ""
        echo -e "\e[7m For Installation Options Run: \e[0m"
        echo -e "\e[1m ./releasecompare install \e[0m"
        echo ""
        echo ""
        echo -e "\e[7m The Comparision Results Were Saved To: \e[0m"
        echo -e "\e[1m $HOME/releasecompare \e[0m"
        echo ""
        _meld
        exit
        ;;
        * )     echo -e "\e[1m no \e[0m"
        _compare
        rm -rf release-removed-uninstalled.txt ;;
    esac
}
###
# Create Release pkglist without packages that were uninstalled by the User
_userreleasepkglist () {
pacman -Q > pacman.txt
grep "removed" /var/log/pacman.log | awk -F '[: ]' '{print $6}'  > removed.txt
sort removed.txt | uniq -u | tee removed.txt
file="echo *release.txt"
cat ${file} > install.txt
diff --suppress-common-lines removed.txt install.txt | awk -F '<' '{print $1}' | grep ">" | cut -c3- | tee release-removed-uninstalled.txt
rm -rf 4.txt 5.txt 6.txt comp2.txt ergebnis.txt final.txt install.txt newdiffreverse.txt outfile.txt pacman.txt removed.txt

}
###
# Check if comparison files already exist in case of multiple runs with different releases
_rerun_check () {
  if [[ -f $(readlink -e userpkglist.txt) ]]
  then
    echo ""
    echo -e "\e[7m Rerunning the script with existing comparison files will disable
    creating the release-removed-uninstalled.txt \e[0m"
    echo ""
    _remove_results
  else
    _compare
    _userreleasepkglist
    echo ""
    echo -e "\e[7m For Installation Options Run: \e[0m"
    echo -e "\e[1m ./releasecompare install \e[0m"
    echo ""
    echo ""
    echo -e "\e[7m The Comparision Results Were Saved To: \e[0m"
    echo -e "\e[1m $HOME/releasecompare \e[0m"
    echo ""
    _meld
    exit

  fi
}
###
# Edition Choice
_choise() {
  echo ""
  echo -e "\e[7m Chose the Version to compare \e[0m"
  echo ""
  echo "  1) Gnome"
  echo "  2) KDE"
  echo "  3) XFCE"
  echo "  4) Custom URL (Compare any Edition)"
  echo "  5) Quit"
read -r choice
case "$choice" in
        1|g|gnome)
            echo "you chose gnome"
            choice="gnome"
            _rerun_check
            ;;
        2|k|kde)
            echo "you chose kde"
            choice="kde"
            _rerun_check
            ;;
        3|x|xfce)
            echo "you chose xfce"
            choice="xfce"
            _rerun_check
            ;;
        4|u|url)
            _custom_URL
            ;;
        5|q|quit)
            exit
            ;;
        * ) echo "invalid option $REPLY"
            ;;
    esac
}
###
# Compare results
_compare() {
# Get a version number
awk -F= '/ID=/{printf $2" "} /RELEASE=/{printf $2" "} /NAME=/{print $2}' /etc/lsb-release | cut -d' ' -f2 > release.txt

# Print the version number
release=$(<release.txt)

# Release URL
wget https://osdn.net/projects/manjaro/storage/${choice}/${release}/

# Final URL
grep "pkgs.txt" index.html | head -1 | cut -d' ' -f4 | cut -c12- | cut -d. -f1-3 > path.txt
pkgs=$(<path.txt)

if wget -q "https://osdn.net/projects/manjaro/storage/${choice}/${release}/${pkgs}.txt"
then
  #statements
  # Path to packages file from release
  file="echo *pkgs.txt"

  # generate list of installed packages
  pacman -Q > pacman.txt

  # final comparision
  cat ${file} | cut -d' ' -f1 > comp1.txt
  cat pacman.txt | cut -d' ' -f1 > comp2.txt
  diff -u comp2.txt comp1.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee ${choice}-${release}-release.txt # Packages from Release which are not installed local
  diff -u comp1.txt comp2.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee userpkglist.txt # Packages installed by User

  # clean up
  rm -rf *pkgs.txt comp1.txt comp2.txt pacman.txt index.html path.txt release.txt

else
  echo ""
  echo -e "Something went wrong, local release number does not match online release !!!"
  echo -e "Please go to\e[7m https://osdn.net/projects/manjaro/storage/(Edition)/(Release_Number)/*pkgs.txt\e[0m and copy the URL."
  echo ""
  echo -e "  1) Copy/Paste the URL to *pkgs.txt and press ENTER"
  echo -e "  2) Quit"
  read -r choice
  case "$choice" in
          1)
              echo -e "paste the URL to *pkgs.txt"
              read -p 'URL: ' uservar
              wget $uservar
              file="echo *pkgs.txt"

              # generate list of installed packages
              pacman -Q > pacman.txt

              # final comparision
              cat ${file} | cut -d' ' -f1 > comp1.txt
              cat pacman.txt | cut -d' ' -f1 > comp2.txt
              diff -u comp2.txt comp1.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee ${choice}-${release}-release.txt # Packages from Release which are not installed local
              diff -u comp1.txt comp2.txt | grep -E "^\+" | sed '1d'  | cut -c2-  | tee userpkglist.txt # Packages installed by User

              # clean up
              rm -rf *pkgs.txt comp1.txt comp2.txt pacman.txt index.html path.txt release.txt

              ;;

          2|q|quit)
              # clean up
              rm -rf *pkgs.txt comp1.txt comp2.txt pacman.txt index.html path.txt release.txt
              exit
              ;;
          * ) echo "invalid option $REPLY"
              ;;
      esac
fi
#wget https://osdn.net/projects/manjaro/storage/${choice}/${release}/${pkgs}.txt


}
###
# Check if local release.txt file exists for possible installation and to avoid running a new comparison which would overwrite user changes
_installcheck () {
  echo ""
  if [[ -f $(readlink -e *release.txt) ]]
  then
  file="echo *release.txt"
  cat ${file} > install.txt
  echo ""
  echo -e "\e[7m A existing comparison was found! Please choose what to do! \e[0m"
  echo ""
  echo "  1) Install from *release.txt"
  echo "  2) Install from release-removed-uninstalled.txt"
  echo "  3) Install from *release.txt after a new comparision"
  echo "  4) Install from release-removed-uninstalled.txt after a new comparision"
  echo "  5) Quit"
  read -r choice
  case "$choice" in
        1)
            sudo pacman -S - < install.txt
            rm -rf install.txt
            ;;
        2)
            sudo pacman -S - < release-removed-uninstalled.txt
            rm -rf install.txt
            ;;
        3)
            rm -rf install.txt ${file} userpkglist.txt release-removed-uninstalled.txt
            _choise
            echo ""
            echo -e "\e[7m Starting installation! \e[0m"
            echo ""
      	    sudo pacman -S - < ${choice}-${release}-release.txt
            ;;
        4)
            rm -rf install.txt ${file} userpkglist.txt release-removed-uninstalled.txt
            _choise
            echo ""
            echo -e "\e[7m Starting installation! \e[0m"
            echo ""
            sudo pacman -S - < release-removed-uninstalled.txt
            ;;
        5|q|quit)
            rm -rf install.txt
            exit
            ;;
        * ) echo "invalid option $REPLY"
            ;;
    esac
  else
    echo "  1) Install from *release.txt"
    echo "  2) Install from release-removed-uninstalled.txt"
    echo "  3) Quit"
    read -r choice
    case "$choice" in
          1)
              _choise
              echo ""
              echo -e "\e[7m Starting installation! \e[0m"
              echo ""
              sudo pacman -S - < ${choice}-${release}-release.txt
              ;;
          2)
              _choise
              echo ""
              echo -e "\e[7m Starting installation! \e[0m"
              echo ""
              sudo pacman -S - < release-removed-uninstalled.txt
              ;;
          3|q|quit)
              rm -rf install.txt
              exit
              ;;
          * ) echo "invalid option $REPLY"
              ;;
      esac

fi
}
###
# install different packages Flag
if [ "$1" == "install" ]; then
  echo ""
  echo -e "\e[7m Installation Options \e[0m"
  _installcheck
  exit
fi
###
# Compare from custom *pkgs URL Flag
if [ "$1" == "-u" ]; then
  _custom_URL
fi
###
# Run the script without flags
_choise
exit
